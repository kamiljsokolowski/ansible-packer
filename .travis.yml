---
sudo: required

env:
  - distribution: ubuntu
    version: 16.04
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

services:
  - docker

before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --rm=true --file=./tests/Dockerfile.${distribution}-${version} --tag=ansible-packer-test:${distribution}-${version} ./tests'

script:
  - container_id=${mktemp}
  - 'sudo docker run --privileged --detach --volume="${PWD}":/etc/ansible/roles/ansible-packer:ro ${run_opts}" ansible-packer-test:${distribution}-${version} "${init}" > "${container_id}"'

  # syntax check
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible-packer/tests/main.yml --syntax-check'

  # first run check
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible-packer/tests/main.yml'

  # idempotence check
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/ansible-packer/tests/main.yml
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'idempotence check: pass' && exit 0)
    || (echo 'idempotence check: fail' && exit 1)

  # clean up
  - 'sudo docker stop "$(cat ${container_id})"'
